version: '3.3'

services:
  photo-blog-nginx.docker:
    image: nginx:1.12
    container_name: photo-blog-nginx
    restart: always
    ports:
      - 8080:8080
      - 8081:8081
      - 8082:8082
      - 8083:8083
      - 8084:8084
    depends_on:
      - photo-blog-frontend.docker
    volumes:
      - ./:/data/
      - ./config/nginx/default:/etc/nginx/default
      - ./config/nginx/conf.d/:/etc/nginx/conf.d

  photo-blog-backend.docker:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    image: photo-blog-php:7.1-fpm
    container_name: photo-blog-backend
    restart: always
    ports:
      - 1215:1215
    depends_on:
      - photo-blog-mysql.docker
      - photo-blog-redis.docker
    volumes:
      - ./:/data/
      - ./config/php-fpm/php.ini:/usr/local/etc/php/php.ini

  photo-blog-frontend.docker:
    environment:
      REBUILD_ON_STARTUP: '1'
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    image: photo-blog-nodejs:8.1
    container_name: photo-blog-frontend
    restart: always
    depends_on:
      - photo-blog-backend.docker
    volumes:
      - ./:/data/

  photo-blog-mysql.docker:
    image: mysql:5.7
    container_name: photo-blog-mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'photo_blog'
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_USER: 'dev'
      MYSQL_PASSWORD: 'dev'
    ports:
      - 3306:3306
    volumes:
      - ./state/photo-blog-mysql.docker/var/lib/mysql:/var/lib/mysql
      - ./config/mysql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
      - ./config/mysql/my.cnf:/etc/mysql/my.cnf

  photo-blog-redis.docker:
    image: redis:3.2
    container_name: photo-blog-redis
    restart: always
